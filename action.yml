name: CoGuard Scan Action
author: CoGuard (coguard.io)
description: Discovers known configuration files in Docker images or repositories, and scans them using CoGuard.
branding:
  icon: "package"
  color: "gray-dark"

inputs:
  dockerImageName:
    description: The Docker image name which the CoGuard CLI should scan
    required: false
    default: ""
  repositoryScan:
    description: |
      Whether or not to scan the given repository. Automatically is chosen when
      `dockerImageName` is not specified.
    required: false
    default: true
  failLevel:
    description: The minimum level of severity of failed checks to fail this build.
    required: false
    default: 1
  workingDirectory:
    description: The working directory where the acton should take place
    required: false
    default: "."
  outputFormat:
    description: The output format of the coguard scan (`formatted`, `json`, `sarif`)
    required: false
    default: formatted
  username:
    description: |
      The username as registred on coguard.io. If you are not registered, please
      go to https://portal.coguard.io, and click on "Log In" to register.
    required: true
  password:
    description: The CoGuard password for the user identified by username.

runs:
  using: "composite"
  steps:
    - id: setup-python
      name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"

    - id: install-coguard-cli
      name: Install CoGuard CLI
      run: |
        python -m pip install --upgrade --no-cache-dir pip
        python -m pip install --no-cache-dir coguard-cli
      shell: bash

    - uses: actions/checkout@v3

    - id: input-check
      name: Checking validity of input parameters
      run: |
        test ${{inputs.outputFormat}} = "formatted" -o ${{inputs.outputFormat}} = "sarif" -o ${{inputs.outputFormat}} = "json"
        test ${{inputs.failLevel}} -ge 1 -a ${{inputs.failLevel}} -le 6
      shell: bash

    - id: run-coguard-cli
      name: Run CoGuard CLI on specified image or repository
      env:
        COGUARD_USER_NAME: ${{inputs.username}}
        COGUARD_PASSWORD: ${{inputs.password}}
      run: |
        if [[ -n ${{inputs.dockerImageName}} ]]
        then
            coguard --minimum-fail-level=${{inputs.failLevel}} --output-format=${{inputs.outputFormat}} docker-image ${{inputs.dockerImageName}};
        else
            coguard --minimum-fail-level=${{inputs.failLevel}} --output-format=${{inputs.outputFormat}} folder "${{inputs.workingDirectory}}";
        fi;
      shell: bash
